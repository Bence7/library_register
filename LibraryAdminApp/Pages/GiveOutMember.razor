@page "/giveoutabook/{id:int}/members"
@using ClassLibrary.Models
@using LibraryAdminApp.Services
@inject IMemberService MemberService
@inject IRentService RentService
@inject NavigationManager NavigationManager

<h3>Select a person</h3>

@code
{ 
    [Parameter]
    public int Id { get; set; }

    private RentalModel Rental { get; set; } = new();
    
    private IEnumerable<MemberModel>? allMember { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        allMember = await MemberService.getAllMemberAsync();
    }

    private async Task ValidateAsync(int memberId, int bookId)
    {
        Rental.RentalStatus = true;
        Rental.RentalStartDate = DateTime.Today;
        Rental.RentalEndDate = DateTime.Today.AddDays(30);
        Rental.MemberId = memberId;
        Rental.BookId = bookId;
        await RentService.AddRentalAsync(Rental);
        GetBack.counter++;
        NavigationManager.NavigateTo("/giveoutabook", forceLoad:true);
    }
}

@if (allMember is null)
{
    <p>Loading...</p> 
}
else
{
    <table class="table table-dark table-striped">
        <thead>
        <tr>
            <th>Name</th>
            <th>Birth of date</th>
            <th>Address</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var member in allMember)
        {
            <tr>
                <td>@member.Name</td>
                <td>@member.BirthDate</td>
                <td>@member.Address</td>
                <td>
                    <button @onclick="(()=> ValidateAsync(member.Id, Id))" class="btn btn-dark">SELECT</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
    

}
<a href="/giveoutabook" class="btn btn-dark">BACK</a>