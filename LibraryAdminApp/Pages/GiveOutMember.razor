@page "/giveoutabook/members"
@using ClassLibrary.Models
@using LibraryAdminApp.Services
@inject IMemberService MemberService
@inject IRentService RentService
@inject NavigationManager NavigationManager

<h3>Give out books</h3>

@code
{ 
    [Parameter]
    public int Id { get; set; }
    private RentalModel? rental { get; set; }
    private IEnumerable<MemberModel>? allMember { get; set; }
    protected override async Task OnInitializedAsync()
    {
        allMember = await MemberService.getAllMemberAsync();
    }

    private async Task ValidateAsync(int memberId, int bookId)
    {
        rental.RentalStartDate=DateTime.Now;
        rental.RentalEndDate=DateTime.Today.AddDays(30);
        rental.RentalStatus = true;
        rental.MemberId = memberId;
        rental.BookId = bookId;
        NavigationManager.NavigateTo("/");
        await RentService.AddRentalAsync(rental);
    }
}

@if (allMember is null)
{
    <p>Loading...</p> 
}
else
{
    <table class="table table-dark table-striped">
        <thead>
        <tr>
            <th>Name</th>
            <th>Birth of date</th>
            <th>Address</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var member in allMember)
        {
            <tr>
                <td>@member.Name</td>
                <td>@member.BirthDate</td>
                <td>@member.Address</td>
                <td><button onclick="@ValidateAsync(@member.Id, Id)">SELECT</button></td>
            </tr>
        }
        </tbody>
    </table>
}